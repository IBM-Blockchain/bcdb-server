"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8940],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(n),k=o,m=u["".concat(l,".").concat(k)]||u[k]||d[k]||a;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=k;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[u]="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},7254:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={id:"block",title:"Proof of Existence of a Block"},i=void 0,c={unversionedId:"getting-started/proofs-and-verification/curl/block",id:"getting-started/proofs-and-verification/curl/block",isDocsHomePage:!1,title:"Proof of Existence of a Block",description:"Path in ledger query",source:"@site/docs/getting-started/proofs-and-verification/curl/block.md",sourceDirName:"getting-started/proofs-and-verification/curl",slug:"/getting-started/proofs-and-verification/curl/block",permalink:"/orion-server/docs/getting-started/proofs-and-verification/curl/block",tags:[],version:"current",frontMatter:{id:"block",title:"Proof of Existence of a Block"},sidebar:"Documentation",previous:{title:"Proof of Existence of a Transaction",permalink:"/orion-server/docs/getting-started/proofs-and-verification/curl/tx"},next:{title:"Familiar Programming Model",permalink:"/orion-server/docs/design-principles/programming-model"}},l=[{value:"Path in ledger query",id:"path-in-ledger-query",children:[],level:2}],s={toc:l};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"path-in-ledger-query"},"Path in ledger query"),(0,o.kt)("p",null,"This type of query is used to prove that block X is connected to block Y, based on skip chain hashes. The query result contains a list of block headers, including block X, connecting blocks, and block Y. X > Y, because connectivity in skip chains, like in all blockchains, is from latter block to the earlier one.\nFor more information about ledger consistency, see the sections on ",(0,o.kt)("a",{parentName:"p",href:"../../../architecture-and-design/block-skip-chain"},"Block Skip Chain")," and ",(0,o.kt)("a",{parentName:"p",href:"../../../architecture-and-design/block-structure"},"Block Structure"),"."),(0,o.kt)("p",null,"Server expose ",(0,o.kt)("inlineCode",{parentName:"p"},"ledger/path?start={startNum}&end={endNum}")," GET query to access to ledger paths."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Sign json serialized query")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'bin/signer -data \'{"user_id":"alice","start_block_number":1,"end_block_number":6}\' -privatekey=deployment/sample/crypto/alice/alice.key\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Signature")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"MEYCIQC6C8c4NBgnfAEC0L5ftPOQqxbP53rypSHKL+oZ7O5cggIhAPyz1Jg8Dlv98XVDM6GaN9D17X0XiVvA7D2l8cibXcYr\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Submit query")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'curl \\\n     -H "Content-Type: application/json" \\\n     -H "UserID: alice" \\\n     -H "Signature: MEYCIQC6C8c4NBgnfAEC0L5ftPOQqxbP53rypSHKL+oZ7O5cggIhAPyz1Jg8Dlv98XVDM6GaN9D17X0XiVvA7D2l8cibXcYr" \\\n     -X GET -G "http://127.0.0.1:6001/ledger/path" -d start=1 -d end=6 | jq .\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Output")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "response": {\n    "header": {\n      "node_id": "bdb-node-1"\n    },\n    "block_headers": [\n      {\n        "base_header": {\n          "number": 6,\n          "previous_base_header_hash": "TJYT7zr95D3ghtU/M+j8OStU6r8Y+XRC5xfb90jshbI=",\n          "last_committed_block_hash": "r57EtiB2XO1XlVAxBwFtn7cHP7YsfUBFi69y0UY0tw0=",\n          "last_committed_block_num": 5\n        },\n        "skipchain_hashes": [\n          "r57EtiB2XO1XlVAxBwFtn7cHP7YsfUBFi69y0UY0tw0="\n        ],\n        "tx_merkle_tree_root_hash": "dSc42JVp36bfORFO8QehzQFypEtBQfUzluT6ixhjeo4=",\n        "state_merkle_tree_root_hash": "YRsFw5PcG1XzYO5o5nJa3lVfknijRqu6cCaDF1zpPA8=",\n        "validation_info": [\n          {}\n        ]\n      },\n      {\n        "base_header": {\n          "number": 5,\n          "previous_base_header_hash": "NqyVWNBl/XmWLM7PkK8NbI0qrwFmYvGHSTc03vj/zus=",\n          "last_committed_block_hash": "nDNWHZPrlG3JVq6eLcuHPaS1iEZkBkemV7IleIVx6Jc=",\n          "last_committed_block_num": 4\n        },\n        "skipchain_hashes": [\n          "nDNWHZPrlG3JVq6eLcuHPaS1iEZkBkemV7IleIVx6Jc=",\n          "wZmtCr8rJp/NGsEDjySSfHhi7Omr2Yw/d8rUaetrzLE=",\n          "tl3PgPL/E52yhCWG1vLGk/bJXRqhw3rDxSXZzvMcuWo="\n        ],\n        "tx_merkle_tree_root_hash": "UXXqKu/I2Vr0Ma5cV9Hfun4Xo5285ZwdV9jcKspTnJo=",\n        "state_merkle_tree_root_hash": "ksPp+NOrYLi909AYgrmrmGN1DKuez8ItpRJeLFpWy9g=",\n        "validation_info": [\n          {}\n        ]\n      },\n      {\n        "base_header": {\n          "number": 1\n        },\n        "tx_merkle_tree_root_hash": "1XYyyOxBKRKw/vHgGGClrbko+wjkHmgzkWIjWEqoGaU=",\n        "state_merkle_tree_root_hash": "Gxq3k91oLlxknN9VJCBEnc9IFnJU7YKGbiKtbQLMDF0=",\n        "validation_info": [\n          {}\n        ]\n      }\n    ]\n  },\n  "signature": "MEQCIF1CZuJcUOBG3IkFIo0YkoB6+6X6HvUYaPX4KF/MoIScAiB8L13Da+5rKta9L+kggWJlp9uwsHSt2mQJ/tWliTeliQ=="\n}\n')),(0,o.kt)("p",null,"As you can see, block 6 points to block 5 and block 5 to block 1 (Genesis)"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"It's worth mentioning that block numbering in Orion starts from 1 and not from 0. All power two operations related to block number, require decreasing block number by 1.")))}p.isMDXComponent=!0}}]);