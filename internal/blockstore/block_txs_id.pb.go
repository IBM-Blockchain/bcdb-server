// Code generated by protoc-gen-go. DO NOT EDIT.
// source: blockstore/block_txs_id.proto

package blockstore

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BlockTxIDs struct {
	TxIds                []string `protobuf:"bytes,1,rep,name=tx_ids,json=txIds,proto3" json:"tx_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockTxIDs) Reset()         { *m = BlockTxIDs{} }
func (m *BlockTxIDs) String() string { return proto.CompactTextString(m) }
func (*BlockTxIDs) ProtoMessage()    {}
func (*BlockTxIDs) Descriptor() ([]byte, []int) {
	return fileDescriptor_90a68b79e6485ed0, []int{0}
}

func (m *BlockTxIDs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockTxIDs.Unmarshal(m, b)
}
func (m *BlockTxIDs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockTxIDs.Marshal(b, m, deterministic)
}
func (m *BlockTxIDs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockTxIDs.Merge(m, src)
}
func (m *BlockTxIDs) XXX_Size() int {
	return xxx_messageInfo_BlockTxIDs.Size(m)
}
func (m *BlockTxIDs) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockTxIDs.DiscardUnknown(m)
}

var xxx_messageInfo_BlockTxIDs proto.InternalMessageInfo

func (m *BlockTxIDs) GetTxIds() []string {
	if m != nil {
		return m.TxIds
	}
	return nil
}

func init() {
	proto.RegisterType((*BlockTxIDs)(nil), "blockstore.BlockTxIDs")
}

func init() { proto.RegisterFile("blockstore/block_txs_id.proto", fileDescriptor_90a68b79e6485ed0) }

var fileDescriptor_90a68b79e6485ed0 = []byte{
	// 152 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4d, 0xca, 0xc9, 0x4f,
	0xce, 0x2e, 0x2e, 0xc9, 0x2f, 0x4a, 0xd5, 0x07, 0x33, 0xe3, 0x4b, 0x2a, 0x8a, 0xe3, 0x33, 0x53,
	0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0xb8, 0x10, 0xd2, 0x4a, 0xca, 0x5c, 0x5c, 0x4e, 0x20,
	0x5e, 0x48, 0x85, 0xa7, 0x4b, 0xb1, 0x90, 0x28, 0x17, 0x5b, 0x49, 0x45, 0x7c, 0x66, 0x4a, 0xb1,
	0x04, 0xa3, 0x02, 0xb3, 0x06, 0x67, 0x10, 0x6b, 0x49, 0x85, 0x67, 0x4a, 0xb1, 0x93, 0x5d, 0x94,
	0x4d, 0x7a, 0x66, 0x49, 0x46, 0x69, 0x92, 0x5e, 0x72, 0x7e, 0xae, 0x7e, 0x46, 0x65, 0x41, 0x6a,
	0x51, 0x4e, 0x6a, 0x4a, 0x7a, 0x6a, 0x91, 0x6e, 0x4e, 0x62, 0x52, 0xb1, 0x7e, 0x7e, 0x51, 0x66,
	0x7e, 0x9e, 0x6e, 0x71, 0x6a, 0x51, 0x59, 0x6a, 0x91, 0x7e, 0x66, 0x5e, 0x49, 0x6a, 0x51, 0x5e,
	0x62, 0x8e, 0x3e, 0xc2, 0x92, 0x24, 0x36, 0xb0, 0xbd, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xc6, 0x30, 0x61, 0x8b, 0x98, 0x00, 0x00, 0x00,
}
