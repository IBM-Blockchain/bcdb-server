syntax = "proto3";

option go_package = "github.ibm.com/blockchaindb/server/api";

package api;

import "types.proto";

// Block holds the chain information and transactions
message Block {
  BlockHeader header = 1;
  repeated TransactionEnvelope transactionEnvelopes = 2;
}

// BlockHeader holds the block metadata and the chain information
message BlockHeader {
  uint64 number = 1;
  bytes previous_block_header_hash = 2;
  bytes transactions_hash = 3;
}

// TransactionEnvelope holds the transaction and a signature
message TransactionEnvelope {
  Transaction payload = 1;
  bytes signature = 2;
}

// Transaction holds the user and all reads/writes
message Transaction {
    string DB_name = 1;
    bytes userID = 2;
    bytes txID = 3;
    enum DataModel {
        KV = 0;
    }
    DataModel data_model = 4;
    repeated Statement statements = 5;
    repeated KVRead reads = 6;
    repeated KVWrite writes = 7;
}

// Statement holds all database statement executed by the transaction
message Statement{
  string operation = 1;
  repeated bytes arguments = 2;
}

// KVRead hold a read key and its version
message KVRead {
  string key = 1;
  Version version = 2;
}

// KVWrite hold a write including a delete
message KVWrite {
  string key = 1;
  bool is_delete = 2;
  bytes value = 3;
}
